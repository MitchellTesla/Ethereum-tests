# Check for block headers that don't obey EIP 1559
#
# 1. Incorrect baseFee after a block
# 2. gasTarget decreased by more than 1/1024
# 3. gasTarget increased by more than 1/1024

badBlocks:
  genesisBlockHeader:
    bloom: '0x
    coinbase: '0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba'
    difficulty: '131072'
    extraData: '0x42'
    gasUsed: '0'
    mixHash: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'
    nonce: '0x0102030405060708'
    number: '0'
    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000'
    receiptTrie: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'
    stateRoot: '0xf99eb1626cfa6db435c0836235942d7ccaa935f1ae247d3f1c21e495685f903a'
    timestamp: '0x03b6'
    transactionsTrie: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'
    uncleHash: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'
    gasLimit: 1073741824  # 1024^3
    baseFee: 1000
  sealEngine: NoProof


  pre:
    0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: 0x10000000000
      code: ''
      nonce: 1
      storage: {}

    0xd02d72E067e77158444ef2020Ff2d325f929B363:
      balance: 0x1000000000000
      nonce: 1
      code: ''
      storage: {}


    # Spend all the gas you can
    # (that is the result of a call with an illegal opcode)
    0x1111111111111111111111111111111111111111:
      balance: 0x10000000000
      nonce: 1
      code: :raw 0xfe
      storage: {}




  blocks:

  # The baseFee is calculated, in a fixed manner, by the blockchain.
  # If you specify the wrong one it won't work
  #
  # From the EIP:
  #
  # if parent_gas_used == parent_gas_target:
  #    expected_base_fee_per_gas = parent_base_fee_per_gas
  # elif parent_gas_used > parent_gas_target:
  #    gas_used_delta = parent_gas_used - parent_gas_target
  #    base_fee_per_gas_delta = max(parent_base_fee_per_gas * gas_used_delta // parent_gas_target // BASE_FEE_MAX_CHANGE_DENOMINATOR, 1)
  #    expected_base_fee_per_gas = parent_base_fee_per_gas + base_fee_per_gas_delta
  # else:
  #    gas_used_delta = parent_gas_target - parent_gas_used
  #    base_fee_per_gas_delta = parent_base_fee_per_gas * gas_used_delta // parent_gas_target // BASE_FEE_MAX_CHANGE_DENOMINATOR
  #    expected_base_fee_per_gas = max(parent_base_fee_per_gas - base_fee_per_gas_delta, 0)
  # assert expected_base_fee_per_gas == block.base_fee_per_gas, 'invalid block: base fee not correct'

  - blockHeader:
      baseFee: 0x36c
    expectException:
      '>=London': baseFeeWrong
    transactions: []
  - blockHeader:
      baseFee: 0x36a
    expectException:
      '>=London': baseFeeWrong
    transactions: []
  - blockHeader:
      baseFee: 0x36b
    transactions: []


  # gasTarget can be decreased, but by no more than 1/1024 per block.
  # gasLimit is twice gasTarget, so it is the same fraction.
  #
  # From the EIP:
  #
  # assert block.gas_target >= parent_gas_target - parent_gas_target // 1024, 'invalid block: gas target decreased too much'

  - blockHeader:
      gasLimit:  1072693247
    expectException:
      '>=London': targetGasLow
    transactions: []
  - blockHeader:
      gasLimit: 1072693248    # 1024*1024*1023 (1023/1024 of the previous gasLimit)
    transactions: []


  # gasTarget can be increased, but by no more than 1/1024 per block.
  # gasLimit is twice gasTarget, so it is the same fraction.
  #
  # From the EIP:
  #
  # assert block.gas_target <= parent_gas_target + parent_gas_target // 1024, 'invalid block: gas target increased too much'

  - blockHeader:
      gasLimit: 1073740802
    expectException:
      '>=London': targetGasHigh
    transactions: []
  - blockHeader:
      # 1024*1023*1025 (1025/1024 of the previous limit) plus one. The one is accepted
      # because of the effects of integer division 
      gasLimit: 1073740801  
    transactions: []


  # gasUsed can be no more than 2*gasTarget (which is why that is called gasLimit)
#  - blockHeader:
#      gasLimit: 1073741824   # Go back to 1024^3
#    transactions:
#    - data: ''
#      accessList: []
#      gasLimit:  268435456   # Half the gas target, quarter of the limit
#      tip: 0x00
#      feeCap: 4000
#      nonce: auto
#      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
#      to: 0x1111111111111111111111111111111111111111
#      value: 0x0
#    - data: ''
#      accessList: []
#      gasLimit:  268435456   # Half the gas target, quarter of the limit
#      tip: 0x00
#      feeCap: 4000
#      nonce: auto
#      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
#      to: 0x1111111111111111111111111111111111111111
#      value: 0x0
#    - data: ''
#      accessList: []
#      gasLimit:  268435456   # Half the gas target, quarter of the limit
#      tip: 0x00
#      feeCap: 4000
#      nonce: auto
#      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
#      to: 0x1111111111111111111111111111111111111111
#      value: 0x0
#    - data: ''
#      accessList: []
#      gasLimit:  268435456   # Half the gas target, quarter of the limit
#      tip: 0x00
#      feeCap: 4000
#      nonce: auto
#      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
#      to: 0x1111111111111111111111111111111111111111
#      value: 0x0




  expect:
  - network:
    - ">=London"
    # No real result, this file checks 
    result: {}


